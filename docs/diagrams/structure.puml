@startuml Object Sctructure Diagramm

object API {
    repositories()
}
frame Services {
    object NetworkService {
        getAllRepositories()
    }
    object MainActivity {
        disableBackButton: Boolean
        showToast()
    }
    object Router {
        popCurrentScreen()
        openRepositories()
    }
}

frame Core {
    object Core {
        handleErrors()
        registerRouting()
        registerActivity()
    }
    frame Dependencies {
        interface NetworkOperations {
            getAllRepositories
        }
        interface ActivityOperations {
            disableBackButton: Boolean
            showToast()
        }
        interface RoutingOperations  {
            popCurrentScreen()
            openRepositories()
        }   
    }
    object RepositoriesPresenter {
        openRepositories()
        present(State): Props
    }
    object RepositoriesState {
        list: List<RepositoriesResponseModel>
    }
}

frame RepositoryUI {
    object RepositoriesProps {
        repositories: Repositories
    }
    object Repositories {
        enum: Loaded, Empty, Loading
    }
    object RepositoriesFragment {
        MutableLiveData<RepositoriesProps>
    }
}

NetworkService -up-> API
NetworkService ..|> NetworkOperations
MainActivity ..|> ActivityOperations
Router ..|> RoutingOperations

Core --> RepositoriesProps : DI
Core -left-> RepositoriesPresenter

Core -up-> NetworkOperations : DI
Core -up-> ActivityOperations : Self assigned
Core -up-> RoutingOperations : Self assigned

RepositoriesPresenter ..> Core : For external Dependencies
RepositoriesPresenter ..> RepositoriesProps : Change props trough present()
RepositoriesPresenter --> RepositoriesState
RepositoriesProps --> Repositories
RepositoriesFragment ..> RepositoriesProps

@enduml